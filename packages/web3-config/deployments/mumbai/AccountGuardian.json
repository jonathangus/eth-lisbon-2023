{
  "address": "0xe6AD63F18fb1E85B2F3cBEf848C6a0b8d09144a5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "DefaultImplementationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "TrustedExecutorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "TrustedImplementationUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTrustedExecutor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTrustedImplementation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "setDefaultImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "setTrustedExecutor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "setTrustedImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcdd06e76891589721888b33e97c20447c17700a47897c5bef4be1568c223dff7",
  "receipt": {
    "to": null,
    "from": "0xAd88438F0DF2939e383648D7d2c783C47086A5e6",
    "contractAddress": "0xe6AD63F18fb1E85B2F3cBEf848C6a0b8d09144a5",
    "transactionIndex": 1,
    "gasUsed": "632960",
    "logsBloom": "0x
    "blockHash": "0xc56b2b392419ea6351f5f89d78e06fa3f2cb7eac7f41872dc3a7b2d9c96ec100",
    "transactionHash": "0xcdd06e76891589721888b33e97c20447c17700a47897c5bef4be1568c223dff7",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 35510682,
        "transactionHash": "0xcdd06e76891589721888b33e97c20447c17700a47897c5bef4be1568c223dff7",
        "address": "0xe6AD63F18fb1E85B2F3cBEf848C6a0b8d09144a5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ad88438f0df2939e383648d7d2c783c47086a5e6"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xc56b2b392419ea6351f5f89d78e06fa3f2cb7eac7f41872dc3a7b2d9c96ec100"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 35510682,
        "transactionHash": "0xcdd06e76891589721888b33e97c20447c17700a47897c5bef4be1568c223dff7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ad88438f0df2939e383648d7d2c783c47086a5e6",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000059f2f35e480000000000000000000000000000000000000000000000000008a99eb85dc7f2f220000000000000000000000000000000000000000000008a1b5fcdbd3df3a06e20000000000000000000000000000000000000000000000008a944c56a69aaf220000000000000000000000000000000000000000000008a1b6027b03151e86e2",
        "logIndex": 3,
        "blockHash": "0xc56b2b392419ea6351f5f89d78e06fa3f2cb7eac7f41872dc3a7b2d9c96ec100"
      }
    ],
    "blockNumber": 35510682,
    "cumulativeGasUsed": "653960",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "f70961aa2205e5141e4dcdd03ebc0c83",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"DefaultImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"TrustedExecutorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"TrustedImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrustedExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrustedImplementation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"setDefaultImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"setTrustedExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"setTrustedImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/account/AccountGuardian.sol\":\"AccountGuardian\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() external {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/account/AccountGuardian.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\nimport '@openzeppelin/contracts/access/Ownable2Step.sol';\\n\\n// @dev manages upgrade and cross-chain execution settings for accounts\\ncontract AccountGuardian is Ownable2Step {\\n    // @dev the default implementation that will be used by all new accounts\\n    address public defaultImplementation;\\n\\n    // @dev mapping from cross-chain executor => is trusted\\n    mapping(address => bool) public isTrustedImplementation;\\n\\n    // @dev mapping from implementation => is trusted\\n    mapping(address => bool) public isTrustedExecutor;\\n\\n    event DefaultImplementationUpdated(address implementation);\\n    event TrustedImplementationUpdated(address implementation, bool trusted);\\n    event TrustedExecutorUpdated(address executor, bool trusted);\\n\\n    function setDefaultImplementation(\\n        address implementation\\n    ) external onlyOwner {\\n        defaultImplementation = implementation;\\n        emit DefaultImplementationUpdated(implementation);\\n    }\\n\\n    function setTrustedImplementation(\\n        address implementation,\\n        bool trusted\\n    ) external onlyOwner {\\n        isTrustedImplementation[implementation] = trusted;\\n        emit TrustedImplementationUpdated(implementation, trusted);\\n    }\\n\\n    function setTrustedExecutor(\\n        address executor,\\n        bool trusted\\n    ) external onlyOwner {\\n        isTrustedExecutor[executor] = trusted;\\n        emit TrustedExecutorUpdated(executor, trusted);\\n    }\\n}\\n\",\"keccak256\":\"0x5fab5860deba7903a0c841fd6869dcc653af72526df78e4fade5ac0a298550ff\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b610139565b600033905090565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556100728161007560201b6105ae1760201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109f3806101486000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637c16ffc4116100715780637c16ffc41461013e5780638da5cb5b1461015a5780639472c8c914610178578063b39c459314610194578063e30c3978146101b2578063f2fde38b146101d0576100a9565b80631506fd4d146100ae578063483c088e146100de578063672657ca146100fa578063715018a61461012a57806379ba509714610134575b600080fd5b6100c860048036038101906100c3919061078c565b6101ec565b6040516100d591906107d4565b60405180910390f35b6100f860048036038101906100f3919061081b565b61020c565b005b610114600480360381019061010f919061078c565b6102a8565b60405161012191906107d4565b60405180910390f35b6101326102c8565b005b61013c6102dc565b005b6101586004803603810190610153919061078c565b610369565b005b6101626103ec565b60405161016f919061086a565b60405180910390f35b610192600480360381019061018d919061081b565b610415565b005b61019c6104b1565b6040516101a9919061086a565b60405180910390f35b6101ba6104d7565b6040516101c7919061086a565b60405180910390f35b6101ea60048036038101906101e5919061078c565b610501565b005b60036020528060005260406000206000915054906101000a900460ff1681565b610214610672565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd83c86b130b16028e237253bca8d22285f6de074a58017e569658653ed5bc36f828260405161029c929190610885565b60405180910390a15050565b60046020528060005260406000206000915054906101000a900460ff1681565b6102d0610672565b6102da60006106f0565b565b60006102e6610721565b90508073ffffffffffffffffffffffffffffffffffffffff166103076104d7565b73ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610931565b60405180910390fd5b610366816106f0565b50565b610371610672565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc97f93134f752a29d53bcdcb295935b3da457bb9a2cfd17ef353ed7e1dc2e088816040516103e1919061086a565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61041d610672565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f373e917f5345a453dc2334dfe07f6cdd8576bda4f79c0e323b3827b419ebaf4082826040516104a5929190610885565b60405180910390a15050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610509610672565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166105696103ec565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61067a610721565b73ffffffffffffffffffffffffffffffffffffffff166106986103ec565b73ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e59061099d565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561071e816105ae565b50565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107598261072e565b9050919050565b6107698161074e565b811461077457600080fd5b50565b60008135905061078681610760565b92915050565b6000602082840312156107a2576107a1610729565b5b60006107b084828501610777565b91505092915050565b60008115159050919050565b6107ce816107b9565b82525050565b60006020820190506107e960008301846107c5565b92915050565b6107f8816107b9565b811461080357600080fd5b50565b600081359050610815816107ef565b92915050565b6000806040838503121561083257610831610729565b5b600061084085828601610777565b925050602061085185828601610806565b9150509250929050565b6108648161074e565b82525050565b600060208201905061087f600083018461085b565b92915050565b600060408201905061089a600083018561085b565b6108a760208301846107c5565b9392505050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b600061091b6029836108ae565b9150610926826108bf565b604082019050919050565b6000602082019050818103600083015261094a8161090e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109876020836108ae565b915061099282610951565b602082019050919050565b600060208201905081810360008301526109b68161097a565b905091905056fea2646970667358221220ce69c6f597362ca7e78cc4b8ac34cf85f51c84b77c8d7f64b6cd855f3f78c8a764736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80637c16ffc4116100715780637c16ffc41461013e5780638da5cb5b1461015a5780639472c8c914610178578063b39c459314610194578063e30c3978146101b2578063f2fde38b146101d0576100a9565b80631506fd4d146100ae578063483c088e146100de578063672657ca146100fa578063715018a61461012a57806379ba509714610134575b600080fd5b6100c860048036038101906100c3919061078c565b6101ec565b6040516100d591906107d4565b60405180910390f35b6100f860048036038101906100f3919061081b565b61020c565b005b610114600480360381019061010f919061078c565b6102a8565b60405161012191906107d4565b60405180910390f35b6101326102c8565b005b61013c6102dc565b005b6101586004803603810190610153919061078c565b610369565b005b6101626103ec565b60405161016f919061086a565b60405180910390f35b610192600480360381019061018d919061081b565b610415565b005b61019c6104b1565b6040516101a9919061086a565b60405180910390f35b6101ba6104d7565b6040516101c7919061086a565b60405180910390f35b6101ea60048036038101906101e5919061078c565b610501565b005b60036020528060005260406000206000915054906101000a900460ff1681565b610214610672565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd83c86b130b16028e237253bca8d22285f6de074a58017e569658653ed5bc36f828260405161029c929190610885565b60405180910390a15050565b60046020528060005260406000206000915054906101000a900460ff1681565b6102d0610672565b6102da60006106f0565b565b60006102e6610721565b90508073ffffffffffffffffffffffffffffffffffffffff166103076104d7565b73ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610931565b60405180910390fd5b610366816106f0565b50565b610371610672565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc97f93134f752a29d53bcdcb295935b3da457bb9a2cfd17ef353ed7e1dc2e088816040516103e1919061086a565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61041d610672565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f373e917f5345a453dc2334dfe07f6cdd8576bda4f79c0e323b3827b419ebaf4082826040516104a5929190610885565b60405180910390a15050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610509610672565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166105696103ec565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61067a610721565b73ffffffffffffffffffffffffffffffffffffffff166106986103ec565b73ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e59061099d565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561071e816105ae565b50565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107598261072e565b9050919050565b6107698161074e565b811461077457600080fd5b50565b60008135905061078681610760565b92915050565b6000602082840312156107a2576107a1610729565b5b60006107b084828501610777565b91505092915050565b60008115159050919050565b6107ce816107b9565b82525050565b60006020820190506107e960008301846107c5565b92915050565b6107f8816107b9565b811461080357600080fd5b50565b600081359050610815816107ef565b92915050565b6000806040838503121561083257610831610729565b5b600061084085828601610777565b925050602061085185828601610806565b9150509250929050565b6108648161074e565b82525050565b600060208201905061087f600083018461085b565b92915050565b600060408201905061089a600083018561085b565b6108a760208301846107c5565b9392505050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b600061091b6029836108ae565b9150610926826108bf565b604082019050919050565b6000602082019050818103600083015261094a8161090e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109876020836108ae565b915061099282610951565b602082019050919050565b600060208201905081810360008301526109b68161097a565b905091905056fea2646970667358221220ce69c6f597362ca7e78cc4b8ac34cf85f51c84b77c8d7f64b6cd855f3f78c8a764736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "The new owner accepts the ownership transfer."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingOwner()": {
        "details": "Returns the address of the pending owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 963,
        "contract": "contracts/account/AccountGuardian.sol:AccountGuardian",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1076,
        "contract": "contracts/account/AccountGuardian.sol:AccountGuardian",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 8030,
        "contract": "contracts/account/AccountGuardian.sol:AccountGuardian",
        "label": "defaultImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 8034,
        "contract": "contracts/account/AccountGuardian.sol:AccountGuardian",
        "label": "isTrustedImplementation",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 8038,
        "contract": "contracts/account/AccountGuardian.sol:AccountGuardian",
        "label": "isTrustedExecutor",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}