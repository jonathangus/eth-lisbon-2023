/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace DataTypes {
  export type EIP712SignatureStruct = {
    v: PromiseOrValue<BigNumberish>;
    r: PromiseOrValue<BytesLike>;
    s: PromiseOrValue<BytesLike>;
    deadline: PromiseOrValue<BigNumberish>;
  };

  export type EIP712SignatureStructOutput = [
    number,
    string,
    string,
    BigNumber
  ] & { v: number; r: string; s: string; deadline: BigNumber };

  export type CollectWithSigDataStruct = {
    collector: PromiseOrValue<string>;
    profileId: PromiseOrValue<BigNumberish>;
    pubId: PromiseOrValue<BigNumberish>;
    data: PromiseOrValue<BytesLike>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type CollectWithSigDataStructOutput = [
    string,
    BigNumber,
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    collector: string;
    profileId: BigNumber;
    pubId: BigNumber;
    data: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type CommentDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    contentURI: PromiseOrValue<string>;
    profileIdPointed: PromiseOrValue<BigNumberish>;
    pubIdPointed: PromiseOrValue<BigNumberish>;
    referenceModuleData: PromiseOrValue<BytesLike>;
    collectModule: PromiseOrValue<string>;
    collectModuleInitData: PromiseOrValue<BytesLike>;
    referenceModule: PromiseOrValue<string>;
    referenceModuleInitData: PromiseOrValue<BytesLike>;
  };

  export type CommentDataStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    referenceModuleData: string;
    collectModule: string;
    collectModuleInitData: string;
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type CommentWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    contentURI: PromiseOrValue<string>;
    profileIdPointed: PromiseOrValue<BigNumberish>;
    pubIdPointed: PromiseOrValue<BigNumberish>;
    referenceModuleData: PromiseOrValue<BytesLike>;
    collectModule: PromiseOrValue<string>;
    collectModuleInitData: PromiseOrValue<BytesLike>;
    referenceModule: PromiseOrValue<string>;
    referenceModuleInitData: PromiseOrValue<BytesLike>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type CommentWithSigDataStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    contentURI: string;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    referenceModuleData: string;
    collectModule: string;
    collectModuleInitData: string;
    referenceModule: string;
    referenceModuleInitData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type CreateProfileDataStruct = {
    to: PromiseOrValue<string>;
    handle: PromiseOrValue<string>;
    imageURI: PromiseOrValue<string>;
    followModule: PromiseOrValue<string>;
    followModuleInitData: PromiseOrValue<BytesLike>;
    followNFTURI: PromiseOrValue<string>;
  };

  export type CreateProfileDataStructOutput = [
    string,
    string,
    string,
    string,
    string,
    string
  ] & {
    to: string;
    handle: string;
    imageURI: string;
    followModule: string;
    followModuleInitData: string;
    followNFTURI: string;
  };

  export type FollowWithSigDataStruct = {
    follower: PromiseOrValue<string>;
    profileIds: PromiseOrValue<BigNumberish>[];
    datas: PromiseOrValue<BytesLike>[];
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type FollowWithSigDataStructOutput = [
    string,
    BigNumber[],
    string[],
    DataTypes.EIP712SignatureStructOutput
  ] & {
    follower: string;
    profileIds: BigNumber[];
    datas: string[];
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type ProfileStructStruct = {
    pubCount: PromiseOrValue<BigNumberish>;
    followModule: PromiseOrValue<string>;
    followNFT: PromiseOrValue<string>;
    handle: PromiseOrValue<string>;
    imageURI: PromiseOrValue<string>;
    followNFTURI: PromiseOrValue<string>;
  };

  export type ProfileStructStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string
  ] & {
    pubCount: BigNumber;
    followModule: string;
    followNFT: string;
    handle: string;
    imageURI: string;
    followNFTURI: string;
  };

  export type PublicationStructStruct = {
    profileIdPointed: PromiseOrValue<BigNumberish>;
    pubIdPointed: PromiseOrValue<BigNumberish>;
    contentURI: PromiseOrValue<string>;
    referenceModule: PromiseOrValue<string>;
    collectModule: PromiseOrValue<string>;
    collectNFT: PromiseOrValue<string>;
  };

  export type PublicationStructStructOutput = [
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string
  ] & {
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    contentURI: string;
    referenceModule: string;
    collectModule: string;
    collectNFT: string;
  };

  export type MirrorDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    profileIdPointed: PromiseOrValue<BigNumberish>;
    pubIdPointed: PromiseOrValue<BigNumberish>;
    referenceModuleData: PromiseOrValue<BytesLike>;
    referenceModule: PromiseOrValue<string>;
    referenceModuleInitData: PromiseOrValue<BytesLike>;
  };

  export type MirrorDataStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string,
    string
  ] & {
    profileId: BigNumber;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    referenceModuleData: string;
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type MirrorWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    profileIdPointed: PromiseOrValue<BigNumberish>;
    pubIdPointed: PromiseOrValue<BigNumberish>;
    referenceModuleData: PromiseOrValue<BytesLike>;
    referenceModule: PromiseOrValue<string>;
    referenceModuleInitData: PromiseOrValue<BytesLike>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type MirrorWithSigDataStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    profileIdPointed: BigNumber;
    pubIdPointed: BigNumber;
    referenceModuleData: string;
    referenceModule: string;
    referenceModuleInitData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type PostDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    contentURI: PromiseOrValue<string>;
    collectModule: PromiseOrValue<string>;
    collectModuleInitData: PromiseOrValue<BytesLike>;
    referenceModule: PromiseOrValue<string>;
    referenceModuleInitData: PromiseOrValue<BytesLike>;
  };

  export type PostDataStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    collectModule: string;
    collectModuleInitData: string;
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type PostWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    contentURI: PromiseOrValue<string>;
    collectModule: PromiseOrValue<string>;
    collectModuleInitData: PromiseOrValue<BytesLike>;
    referenceModule: PromiseOrValue<string>;
    referenceModuleInitData: PromiseOrValue<BytesLike>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type PostWithSigDataStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    contentURI: string;
    collectModule: string;
    collectModuleInitData: string;
    referenceModule: string;
    referenceModuleInitData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetDefaultProfileWithSigDataStruct = {
    wallet: PromiseOrValue<string>;
    profileId: PromiseOrValue<BigNumberish>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetDefaultProfileWithSigDataStructOutput = [
    string,
    BigNumber,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    wallet: string;
    profileId: BigNumber;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetDispatcherWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    dispatcher: PromiseOrValue<string>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetDispatcherWithSigDataStructOutput = [
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    dispatcher: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetFollowModuleWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    followModule: PromiseOrValue<string>;
    followModuleInitData: PromiseOrValue<BytesLike>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetFollowModuleWithSigDataStructOutput = [
    BigNumber,
    string,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    followModule: string;
    followModuleInitData: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetFollowNFTURIWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    followNFTURI: PromiseOrValue<string>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetFollowNFTURIWithSigDataStructOutput = [
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    followNFTURI: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };

  export type SetProfileImageURIWithSigDataStruct = {
    profileId: PromiseOrValue<BigNumberish>;
    imageURI: PromiseOrValue<string>;
    sig: DataTypes.EIP712SignatureStruct;
  };

  export type SetProfileImageURIWithSigDataStructOutput = [
    BigNumber,
    string,
    DataTypes.EIP712SignatureStructOutput
  ] & {
    profileId: BigNumber;
    imageURI: string;
    sig: DataTypes.EIP712SignatureStructOutput;
  };
}

export interface ILensHubInterface extends utils.Interface {
  functions: {
    "collect(uint256,uint256,bytes)": FunctionFragment;
    "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))": FunctionFragment;
    "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "createProfile((address,string,string,address,bytes,string))": FunctionFragment;
    "defaultProfile(address)": FunctionFragment;
    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)": FunctionFragment;
    "emitFollowNFTTransferEvent(uint256,uint256,address,address)": FunctionFragment;
    "follow(uint256[],bytes[])": FunctionFragment;
    "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "getCollectModule(uint256,uint256)": FunctionFragment;
    "getCollectNFT(uint256,uint256)": FunctionFragment;
    "getCollectNFTImpl()": FunctionFragment;
    "getContentURI(uint256,uint256)": FunctionFragment;
    "getDispatcher(uint256)": FunctionFragment;
    "getFollowModule(uint256)": FunctionFragment;
    "getFollowNFT(uint256)": FunctionFragment;
    "getFollowNFTImpl()": FunctionFragment;
    "getFollowNFTURI(uint256)": FunctionFragment;
    "getGovernance()": FunctionFragment;
    "getHandle(uint256)": FunctionFragment;
    "getProfile(uint256)": FunctionFragment;
    "getProfileIdByHandle(string)": FunctionFragment;
    "getPub(uint256,uint256)": FunctionFragment;
    "getPubCount(uint256)": FunctionFragment;
    "getPubPointer(uint256,uint256)": FunctionFragment;
    "getPubType(uint256,uint256)": FunctionFragment;
    "getReferenceModule(uint256,uint256)": FunctionFragment;
    "initialize(string,string,address)": FunctionFragment;
    "isCollectModuleWhitelisted(address)": FunctionFragment;
    "isFollowModuleWhitelisted(address)": FunctionFragment;
    "isProfileCreatorWhitelisted(address)": FunctionFragment;
    "isReferenceModuleWhitelisted(address)": FunctionFragment;
    "mirror((uint256,uint256,uint256,bytes,address,bytes))": FunctionFragment;
    "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "post((uint256,string,address,bytes,address,bytes))": FunctionFragment;
    "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setDefaultProfile(uint256)": FunctionFragment;
    "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setDispatcher(uint256,address)": FunctionFragment;
    "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setEmergencyAdmin(address)": FunctionFragment;
    "setFollowModule(uint256,address,bytes)": FunctionFragment;
    "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setFollowNFTURI(uint256,string)": FunctionFragment;
    "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setGovernance(address)": FunctionFragment;
    "setProfileImageURI(uint256,string)": FunctionFragment;
    "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))": FunctionFragment;
    "setState(uint8)": FunctionFragment;
    "whitelistCollectModule(address,bool)": FunctionFragment;
    "whitelistFollowModule(address,bool)": FunctionFragment;
    "whitelistProfileCreator(address,bool)": FunctionFragment;
    "whitelistReferenceModule(address,bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "collect"
      | "collect(uint256,uint256,bytes)"
      | "collectWithSig"
      | "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))"
      | "comment"
      | "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))"
      | "commentWithSig"
      | "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"
      | "createProfile"
      | "createProfile((address,string,string,address,bytes,string))"
      | "defaultProfile"
      | "defaultProfile(address)"
      | "emitCollectNFTTransferEvent"
      | "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)"
      | "emitFollowNFTTransferEvent"
      | "emitFollowNFTTransferEvent(uint256,uint256,address,address)"
      | "follow"
      | "follow(uint256[],bytes[])"
      | "followWithSig"
      | "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))"
      | "getCollectModule"
      | "getCollectModule(uint256,uint256)"
      | "getCollectNFT"
      | "getCollectNFT(uint256,uint256)"
      | "getCollectNFTImpl"
      | "getCollectNFTImpl()"
      | "getContentURI"
      | "getContentURI(uint256,uint256)"
      | "getDispatcher"
      | "getDispatcher(uint256)"
      | "getFollowModule"
      | "getFollowModule(uint256)"
      | "getFollowNFT"
      | "getFollowNFT(uint256)"
      | "getFollowNFTImpl"
      | "getFollowNFTImpl()"
      | "getFollowNFTURI"
      | "getFollowNFTURI(uint256)"
      | "getGovernance"
      | "getGovernance()"
      | "getHandle"
      | "getHandle(uint256)"
      | "getProfile"
      | "getProfile(uint256)"
      | "getProfileIdByHandle"
      | "getProfileIdByHandle(string)"
      | "getPub"
      | "getPub(uint256,uint256)"
      | "getPubCount"
      | "getPubCount(uint256)"
      | "getPubPointer"
      | "getPubPointer(uint256,uint256)"
      | "getPubType"
      | "getPubType(uint256,uint256)"
      | "getReferenceModule"
      | "getReferenceModule(uint256,uint256)"
      | "initialize"
      | "initialize(string,string,address)"
      | "isCollectModuleWhitelisted"
      | "isCollectModuleWhitelisted(address)"
      | "isFollowModuleWhitelisted"
      | "isFollowModuleWhitelisted(address)"
      | "isProfileCreatorWhitelisted"
      | "isProfileCreatorWhitelisted(address)"
      | "isReferenceModuleWhitelisted"
      | "isReferenceModuleWhitelisted(address)"
      | "mirror"
      | "mirror((uint256,uint256,uint256,bytes,address,bytes))"
      | "mirrorWithSig"
      | "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"
      | "post"
      | "post((uint256,string,address,bytes,address,bytes))"
      | "postWithSig"
      | "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"
      | "setDefaultProfile"
      | "setDefaultProfile(uint256)"
      | "setDefaultProfileWithSig"
      | "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))"
      | "setDispatcher"
      | "setDispatcher(uint256,address)"
      | "setDispatcherWithSig"
      | "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))"
      | "setEmergencyAdmin"
      | "setEmergencyAdmin(address)"
      | "setFollowModule"
      | "setFollowModule(uint256,address,bytes)"
      | "setFollowModuleWithSig"
      | "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))"
      | "setFollowNFTURI"
      | "setFollowNFTURI(uint256,string)"
      | "setFollowNFTURIWithSig"
      | "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"
      | "setGovernance"
      | "setGovernance(address)"
      | "setProfileImageURI"
      | "setProfileImageURI(uint256,string)"
      | "setProfileImageURIWithSig"
      | "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"
      | "setState"
      | "setState(uint8)"
      | "whitelistCollectModule"
      | "whitelistCollectModule(address,bool)"
      | "whitelistFollowModule"
      | "whitelistFollowModule(address,bool)"
      | "whitelistProfileCreator"
      | "whitelistProfileCreator(address,bool)"
      | "whitelistReferenceModule"
      | "whitelistReferenceModule(address,bool)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "collect",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "collect(uint256,uint256,bytes)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "collectWithSig",
    values: [DataTypes.CollectWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.CollectWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "comment",
    values: [DataTypes.CommentDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))",
    values: [DataTypes.CommentDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "commentWithSig",
    values: [DataTypes.CommentWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.CommentWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createProfile",
    values: [DataTypes.CreateProfileDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createProfile((address,string,string,address,bytes,string))",
    values: [DataTypes.CreateProfileDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "defaultProfile",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "defaultProfile(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "emitCollectNFTTransferEvent",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "emitFollowNFTTransferEvent",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "emitFollowNFTTransferEvent(uint256,uint256,address,address)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "follow",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "follow(uint256[],bytes[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "followWithSig",
    values: [DataTypes.FollowWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.FollowWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectModule",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectModule(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectNFT",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectNFT(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectNFTImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectNFTImpl()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getContentURI",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getContentURI(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getDispatcher",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getDispatcher(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowModule",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowModule(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFT",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFT(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFTImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFTImpl()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFTURI",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollowNFTURI(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGovernance()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getHandle",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getHandle(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfile",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfile(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfileIdByHandle",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfileIdByHandle(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPub",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPub(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubCount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubCount(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubPointer",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubPointer(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubType",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPubType(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getReferenceModule",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getReferenceModule(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize(string,string,address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "isCollectModuleWhitelisted",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isCollectModuleWhitelisted(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isFollowModuleWhitelisted",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isFollowModuleWhitelisted(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isProfileCreatorWhitelisted",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isProfileCreatorWhitelisted(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isReferenceModuleWhitelisted",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isReferenceModuleWhitelisted(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "mirror",
    values: [DataTypes.MirrorDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "mirror((uint256,uint256,uint256,bytes,address,bytes))",
    values: [DataTypes.MirrorDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "mirrorWithSig",
    values: [DataTypes.MirrorWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.MirrorWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "post",
    values: [DataTypes.PostDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "post((uint256,string,address,bytes,address,bytes))",
    values: [DataTypes.PostDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "postWithSig",
    values: [DataTypes.PostWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.PostWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultProfile",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultProfile(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultProfileWithSig",
    values: [DataTypes.SetDefaultProfileWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.SetDefaultProfileWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDispatcher",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setDispatcher(uint256,address)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setDispatcherWithSig",
    values: [DataTypes.SetDispatcherWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.SetDispatcherWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setEmergencyAdmin",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setEmergencyAdmin(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModule",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModule(uint256,address,bytes)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModuleWithSig",
    values: [DataTypes.SetFollowModuleWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.SetFollowModuleWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowNFTURI",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowNFTURI(uint256,string)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowNFTURIWithSig",
    values: [DataTypes.SetFollowNFTURIWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.SetFollowNFTURIWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileImageURI",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileImageURI(uint256,string)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileImageURIWithSig",
    values: [DataTypes.SetProfileImageURIWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))",
    values: [DataTypes.SetProfileImageURIWithSigDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setState",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setState(uint8)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistCollectModule",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistCollectModule(address,bool)",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistFollowModule",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistFollowModule(address,bool)",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistProfileCreator",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistProfileCreator(address,bool)",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistReferenceModule",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistReferenceModule(address,bool)",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;

  decodeFunctionResult(functionFragment: "collect", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "collect(uint256,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "comment", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "commentWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createProfile((address,string,string,address,bytes,string))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultProfile(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitCollectNFTTransferEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitFollowNFTTransferEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emitFollowNFTTransferEvent(uint256,uint256,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "follow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "follow(uint256[],bytes[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "followWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectModule(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectNFT(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectNFTImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectNFTImpl()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContentURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContentURI(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDispatcher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDispatcher(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowModule(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFT(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFTImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFTImpl()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFTURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFollowNFTURI(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGovernance()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getHandle", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getHandle(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getProfile", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getProfile(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProfileIdByHandle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProfileIdByHandle(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPub", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPub(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPubCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPubCount(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPubPointer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPubPointer(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPubType", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPubType(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReferenceModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReferenceModule(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initialize(string,string,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCollectModuleWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isCollectModuleWhitelisted(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isFollowModuleWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isFollowModuleWhitelisted(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isProfileCreatorWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isProfileCreatorWhitelisted(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isReferenceModuleWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isReferenceModuleWhitelisted(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mirror", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mirror((uint256,uint256,uint256,bytes,address,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mirrorWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "post", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "post((uint256,string,address,bytes,address,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "postWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultProfile(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultProfileWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDispatcher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDispatcher(uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDispatcherWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEmergencyAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEmergencyAdmin(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModule(uint256,address,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModuleWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowNFTURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowNFTURI(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowNFTURIWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileImageURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileImageURI(uint256,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileImageURIWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setState", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setState(uint8)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistCollectModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistCollectModule(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistFollowModule(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistProfileCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistProfileCreator(address,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistReferenceModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistReferenceModule(address,bool)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ILensHub extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILensHubInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    collect(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "collect(uint256,uint256,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))"(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "createProfile((address,string,string,address,bytes,string))"(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    defaultProfile(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "defaultProfile(address)"(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    emitCollectNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    emitFollowNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "emitFollowNFTTransferEvent(uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    follow(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "follow(uint256[],bytes[])"(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getCollectModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getCollectModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCollectNFT(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getCollectNFT(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<[string]>;

    "getCollectNFTImpl()"(overrides?: CallOverrides): Promise<[string]>;

    getContentURI(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getContentURI(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getDispatcher(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getFollowModule(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFollowNFT(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getFollowNFT(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<[string]>;

    "getFollowNFTImpl()"(overrides?: CallOverrides): Promise<[string]>;

    getFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getFollowNFTURI(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getGovernance(overrides?: CallOverrides): Promise<[string]>;

    "getGovernance()"(overrides?: CallOverrides): Promise<[string]>;

    getHandle(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getHandle(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[DataTypes.ProfileStructStructOutput]>;

    "getProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[DataTypes.ProfileStructStructOutput]>;

    getProfileIdByHandle(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getProfileIdByHandle(string)"(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPub(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[DataTypes.PublicationStructStructOutput]>;

    "getPub(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[DataTypes.PublicationStructStructOutput]>;

    getPubCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getPubCount(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPubPointer(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "getPubPointer(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    getPubType(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "getPubType(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getReferenceModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getReferenceModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    initialize(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "initialize(string,string,address)"(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    isCollectModuleWhitelisted(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isCollectModuleWhitelisted(address)"(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFollowModuleWhitelisted(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isFollowModuleWhitelisted(address)"(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isProfileCreatorWhitelisted(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isProfileCreatorWhitelisted(address)"(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isReferenceModuleWhitelisted(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isReferenceModuleWhitelisted(address)"(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "mirror((uint256,uint256,uint256,bytes,address,bytes))"(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "post((uint256,string,address,bytes,address,bytes))"(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDefaultProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setDefaultProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setDispatcher(uint256,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setEmergencyAdmin(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setEmergencyAdmin(address)"(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setFollowModule(uint256,address,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setFollowNFTURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setGovernance(
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setGovernance(address)"(
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setProfileImageURI(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setProfileImageURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setState(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setState(uint8)"(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistCollectModule(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "whitelistCollectModule(address,bool)"(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistFollowModule(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "whitelistFollowModule(address,bool)"(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistProfileCreator(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "whitelistProfileCreator(address,bool)"(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistReferenceModule(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "whitelistReferenceModule(address,bool)"(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  collect(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "collect(uint256,uint256,bytes)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  collectWithSig(
    vars: DataTypes.CollectWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.CollectWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  comment(
    vars: DataTypes.CommentDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))"(
    vars: DataTypes.CommentDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  commentWithSig(
    vars: DataTypes.CommentWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.CommentWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createProfile(
    vars: DataTypes.CreateProfileDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "createProfile((address,string,string,address,bytes,string))"(
    vars: DataTypes.CreateProfileDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  defaultProfile(
    wallet: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "defaultProfile(address)"(
    wallet: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  emitCollectNFTTransferEvent(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    collectNFTId: PromiseOrValue<BigNumberish>,
    from: PromiseOrValue<string>,
    to: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    collectNFTId: PromiseOrValue<BigNumberish>,
    from: PromiseOrValue<string>,
    to: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  emitFollowNFTTransferEvent(
    profileId: PromiseOrValue<BigNumberish>,
    followNFTId: PromiseOrValue<BigNumberish>,
    from: PromiseOrValue<string>,
    to: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "emitFollowNFTTransferEvent(uint256,uint256,address,address)"(
    profileId: PromiseOrValue<BigNumberish>,
    followNFTId: PromiseOrValue<BigNumberish>,
    from: PromiseOrValue<string>,
    to: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  follow(
    profileIds: PromiseOrValue<BigNumberish>[],
    datas: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "follow(uint256[],bytes[])"(
    profileIds: PromiseOrValue<BigNumberish>[],
    datas: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  followWithSig(
    vars: DataTypes.FollowWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.FollowWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getCollectModule(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getCollectModule(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getCollectNFT(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getCollectNFT(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getCollectNFTImpl(overrides?: CallOverrides): Promise<string>;

  "getCollectNFTImpl()"(overrides?: CallOverrides): Promise<string>;

  getContentURI(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getContentURI(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getDispatcher(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getDispatcher(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFollowModule(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getFollowModule(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFollowNFT(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getFollowNFT(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFollowNFTImpl(overrides?: CallOverrides): Promise<string>;

  "getFollowNFTImpl()"(overrides?: CallOverrides): Promise<string>;

  getFollowNFTURI(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getFollowNFTURI(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getGovernance(overrides?: CallOverrides): Promise<string>;

  "getGovernance()"(overrides?: CallOverrides): Promise<string>;

  getHandle(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getHandle(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getProfile(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<DataTypes.ProfileStructStructOutput>;

  "getProfile(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<DataTypes.ProfileStructStructOutput>;

  getProfileIdByHandle(
    handle: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getProfileIdByHandle(string)"(
    handle: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPub(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<DataTypes.PublicationStructStructOutput>;

  "getPub(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<DataTypes.PublicationStructStructOutput>;

  getPubCount(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPubCount(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPubPointer(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  "getPubPointer(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  getPubType(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  "getPubType(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  getReferenceModule(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getReferenceModule(uint256,uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    pubId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  initialize(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    newGovernance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "initialize(string,string,address)"(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    newGovernance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  isCollectModuleWhitelisted(
    collectModule: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isCollectModuleWhitelisted(address)"(
    collectModule: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFollowModuleWhitelisted(
    followModule: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isFollowModuleWhitelisted(address)"(
    followModule: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isProfileCreatorWhitelisted(
    profileCreator: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isProfileCreatorWhitelisted(address)"(
    profileCreator: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isReferenceModuleWhitelisted(
    referenceModule: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isReferenceModuleWhitelisted(address)"(
    referenceModule: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  mirror(
    vars: DataTypes.MirrorDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "mirror((uint256,uint256,uint256,bytes,address,bytes))"(
    vars: DataTypes.MirrorDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  mirrorWithSig(
    vars: DataTypes.MirrorWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.MirrorWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  post(
    vars: DataTypes.PostDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "post((uint256,string,address,bytes,address,bytes))"(
    vars: DataTypes.PostDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  postWithSig(
    vars: DataTypes.PostWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.PostWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDefaultProfile(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setDefaultProfile(uint256)"(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDefaultProfileWithSig(
    vars: DataTypes.SetDefaultProfileWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.SetDefaultProfileWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDispatcher(
    profileId: PromiseOrValue<BigNumberish>,
    dispatcher: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setDispatcher(uint256,address)"(
    profileId: PromiseOrValue<BigNumberish>,
    dispatcher: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDispatcherWithSig(
    vars: DataTypes.SetDispatcherWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.SetDispatcherWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setEmergencyAdmin(
    newEmergencyAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setEmergencyAdmin(address)"(
    newEmergencyAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFollowModule(
    profileId: PromiseOrValue<BigNumberish>,
    followModule: PromiseOrValue<string>,
    followModuleInitData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setFollowModule(uint256,address,bytes)"(
    profileId: PromiseOrValue<BigNumberish>,
    followModule: PromiseOrValue<string>,
    followModuleInitData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFollowModuleWithSig(
    vars: DataTypes.SetFollowModuleWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.SetFollowModuleWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFollowNFTURI(
    profileId: PromiseOrValue<BigNumberish>,
    followNFTURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setFollowNFTURI(uint256,string)"(
    profileId: PromiseOrValue<BigNumberish>,
    followNFTURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFollowNFTURIWithSig(
    vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setGovernance(
    newGovernance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setGovernance(address)"(
    newGovernance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setProfileImageURI(
    profileId: PromiseOrValue<BigNumberish>,
    imageURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setProfileImageURI(uint256,string)"(
    profileId: PromiseOrValue<BigNumberish>,
    imageURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setProfileImageURIWithSig(
    vars: DataTypes.SetProfileImageURIWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
    vars: DataTypes.SetProfileImageURIWithSigDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setState(
    newState: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setState(uint8)"(
    newState: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistCollectModule(
    collectModule: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "whitelistCollectModule(address,bool)"(
    collectModule: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistFollowModule(
    followModule: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "whitelistFollowModule(address,bool)"(
    followModule: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistProfileCreator(
    profileCreator: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "whitelistProfileCreator(address,bool)"(
    profileCreator: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistReferenceModule(
    referenceModule: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "whitelistReferenceModule(address,bool)"(
    referenceModule: PromiseOrValue<string>,
    whitelist: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    collect(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collect(uint256,uint256,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))"(
      vars: DataTypes.CommentDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createProfile((address,string,string,address,bytes,string))"(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    defaultProfile(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "defaultProfile(address)"(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    emitCollectNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    emitFollowNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "emitFollowNFTTransferEvent(uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    follow(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "follow(uint256[],bytes[])"(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getCollectModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getCollectModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getCollectNFT(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getCollectNFT(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<string>;

    "getCollectNFTImpl()"(overrides?: CallOverrides): Promise<string>;

    getContentURI(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getContentURI(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getDispatcher(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getFollowModule(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFollowNFT(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getFollowNFT(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<string>;

    "getFollowNFTImpl()"(overrides?: CallOverrides): Promise<string>;

    getFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getFollowNFTURI(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getGovernance(overrides?: CallOverrides): Promise<string>;

    "getGovernance()"(overrides?: CallOverrides): Promise<string>;

    getHandle(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getHandle(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<DataTypes.ProfileStructStructOutput>;

    "getProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<DataTypes.ProfileStructStructOutput>;

    getProfileIdByHandle(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProfileIdByHandle(string)"(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPub(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<DataTypes.PublicationStructStructOutput>;

    "getPub(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<DataTypes.PublicationStructStructOutput>;

    getPubCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPubCount(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubPointer(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "getPubPointer(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    getPubType(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    "getPubType(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    getReferenceModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getReferenceModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    initialize(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(string,string,address)"(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    isCollectModuleWhitelisted(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isCollectModuleWhitelisted(address)"(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFollowModuleWhitelisted(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isFollowModuleWhitelisted(address)"(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isProfileCreatorWhitelisted(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isProfileCreatorWhitelisted(address)"(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isReferenceModuleWhitelisted(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isReferenceModuleWhitelisted(address)"(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mirror((uint256,uint256,uint256,bytes,address,bytes))"(
      vars: DataTypes.MirrorDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "post((uint256,string,address,bytes,address,bytes))"(
      vars: DataTypes.PostDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setDefaultProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDefaultProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDispatcher(uint256,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setEmergencyAdmin(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setEmergencyAdmin(address)"(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFollowModule(uint256,address,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFollowNFTURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernance(
      newGovernance: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setGovernance(address)"(
      newGovernance: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileImageURI(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setProfileImageURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setState(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setState(uint8)"(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistCollectModule(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "whitelistCollectModule(address,bool)"(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistFollowModule(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "whitelistFollowModule(address,bool)"(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistProfileCreator(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "whitelistProfileCreator(address,bool)"(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistReferenceModule(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "whitelistReferenceModule(address,bool)"(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    collect(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "collect(uint256,uint256,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))"(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "createProfile((address,string,string,address,bytes,string))"(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    defaultProfile(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "defaultProfile(address)"(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    emitCollectNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    emitFollowNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "emitFollowNFTTransferEvent(uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    follow(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "follow(uint256[],bytes[])"(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getCollectModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCollectModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectNFT(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCollectNFT(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<BigNumber>;

    "getCollectNFTImpl()"(overrides?: CallOverrides): Promise<BigNumber>;

    getContentURI(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getContentURI(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDispatcher(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFollowModule(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollowNFT(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFollowNFT(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<BigNumber>;

    "getFollowNFTImpl()"(overrides?: CallOverrides): Promise<BigNumber>;

    getFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFollowNFTURI(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGovernance(overrides?: CallOverrides): Promise<BigNumber>;

    "getGovernance()"(overrides?: CallOverrides): Promise<BigNumber>;

    getHandle(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getHandle(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfileIdByHandle(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProfileIdByHandle(string)"(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPub(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPub(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPubCount(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubPointer(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPubPointer(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPubType(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPubType(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReferenceModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReferenceModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "initialize(string,string,address)"(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    isCollectModuleWhitelisted(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isCollectModuleWhitelisted(address)"(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFollowModuleWhitelisted(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isFollowModuleWhitelisted(address)"(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isProfileCreatorWhitelisted(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isProfileCreatorWhitelisted(address)"(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isReferenceModuleWhitelisted(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isReferenceModuleWhitelisted(address)"(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "mirror((uint256,uint256,uint256,bytes,address,bytes))"(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "post((uint256,string,address,bytes,address,bytes))"(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDefaultProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setDefaultProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setDispatcher(uint256,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setEmergencyAdmin(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setEmergencyAdmin(address)"(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setFollowModule(uint256,address,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setFollowNFTURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setGovernance(
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setGovernance(address)"(
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setProfileImageURI(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setProfileImageURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setState(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setState(uint8)"(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistCollectModule(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "whitelistCollectModule(address,bool)"(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistFollowModule(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "whitelistFollowModule(address,bool)"(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistProfileCreator(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "whitelistProfileCreator(address,bool)"(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistReferenceModule(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "whitelistReferenceModule(address,bool)"(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    collect(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "collect(uint256,uint256,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    collectWithSig(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "collectWithSig((address,uint256,uint256,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CollectWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    comment(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))"(
      vars: DataTypes.CommentDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    commentWithSig(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "commentWithSig((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.CommentWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createProfile(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "createProfile((address,string,string,address,bytes,string))"(
      vars: DataTypes.CreateProfileDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    defaultProfile(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "defaultProfile(address)"(
      wallet: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    emitCollectNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "emitCollectNFTTransferEvent(uint256,uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      collectNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    emitFollowNFTTransferEvent(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "emitFollowNFTTransferEvent(uint256,uint256,address,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTId: PromiseOrValue<BigNumberish>,
      from: PromiseOrValue<string>,
      to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    follow(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "follow(uint256[],bytes[])"(
      profileIds: PromiseOrValue<BigNumberish>[],
      datas: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    followWithSig(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "followWithSig((address,uint256[],bytes[],(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.FollowWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getCollectModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCollectModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectNFT(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCollectNFT(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getCollectNFTImpl()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContentURI(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getContentURI(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDispatcher(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFollowModule(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowNFT(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFollowNFT(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowNFTImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getFollowNFTImpl()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFollowNFTURI(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGovernance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getGovernance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getHandle(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getHandle(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProfileIdByHandle(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProfileIdByHandle(string)"(
      handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPub(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPub(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPubCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPubCount(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPubPointer(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPubPointer(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPubType(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPubType(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReferenceModule(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReferenceModule(uint256,uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      pubId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "initialize(string,string,address)"(
      name: PromiseOrValue<string>,
      symbol: PromiseOrValue<string>,
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    isCollectModuleWhitelisted(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isCollectModuleWhitelisted(address)"(
      collectModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFollowModuleWhitelisted(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isFollowModuleWhitelisted(address)"(
      followModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isProfileCreatorWhitelisted(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isProfileCreatorWhitelisted(address)"(
      profileCreator: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isReferenceModuleWhitelisted(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isReferenceModuleWhitelisted(address)"(
      referenceModule: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mirror(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "mirror((uint256,uint256,uint256,bytes,address,bytes))"(
      vars: DataTypes.MirrorDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    mirrorWithSig(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "mirrorWithSig((uint256,uint256,uint256,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.MirrorWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    post(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "post((uint256,string,address,bytes,address,bytes))"(
      vars: DataTypes.PostDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    postWithSig(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "postWithSig((uint256,string,address,bytes,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.PostWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDefaultProfile(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setDefaultProfile(uint256)"(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDefaultProfileWithSig(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setDefaultProfileWithSig((address,uint256,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDefaultProfileWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDispatcher(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setDispatcher(uint256,address)"(
      profileId: PromiseOrValue<BigNumberish>,
      dispatcher: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDispatcherWithSig(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setDispatcherWithSig((uint256,address,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetDispatcherWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setEmergencyAdmin(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setEmergencyAdmin(address)"(
      newEmergencyAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFollowModule(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setFollowModule(uint256,address,bytes)"(
      profileId: PromiseOrValue<BigNumberish>,
      followModule: PromiseOrValue<string>,
      followModuleInitData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFollowModuleWithSig(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setFollowModuleWithSig((uint256,address,bytes,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowModuleWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFollowNFTURI(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setFollowNFTURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      followNFTURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFollowNFTURIWithSig(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setFollowNFTURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetFollowNFTURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setGovernance(
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setGovernance(address)"(
      newGovernance: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setProfileImageURI(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setProfileImageURI(uint256,string)"(
      profileId: PromiseOrValue<BigNumberish>,
      imageURI: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setProfileImageURIWithSig(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setProfileImageURIWithSig((uint256,string,(uint8,bytes32,bytes32,uint256)))"(
      vars: DataTypes.SetProfileImageURIWithSigDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setState(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setState(uint8)"(
      newState: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistCollectModule(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "whitelistCollectModule(address,bool)"(
      collectModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistFollowModule(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "whitelistFollowModule(address,bool)"(
      followModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistProfileCreator(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "whitelistProfileCreator(address,bool)"(
      profileCreator: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistReferenceModule(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "whitelistReferenceModule(address,bool)"(
      referenceModule: PromiseOrValue<string>,
      whitelist: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
